services:
  gertrude-api:
    image: gertrude-api
    build:
      context: ..
      dockerfile: api/Dockerfile
    working_dir: /app/api
    cpus: 2
    mem_limit: 4g
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "8080:8080"
    volumes:
      # mount all local packages for live debugging
      - .:/app/api:ro
      - ../duet:/app/duet:ro
      - ../gertie:/app/gertie:ro
      - ../pairql:/app/pairql:ro
      - ../pairql-macapp:/app/pairql-macapp:ro
      - ../pairql-iosapp:/app/pairql-iosapp:ro
      - ../ts-interop:/app/ts-interop:ro
      - ../x-aws:/app/x-aws:ro
      - ../x-postmark:/app/x-postmark:ro
      - ../x-slack:/app/x-slack:ro
      - ../x-stripe:/app/x-stripe:ro
      - ../x-expect:/app/x-expect:ro
      - ../x-kit:/app/x-kit:ro
      - ../x-http:/app/x-http:ro
      # keep build artifacts, speed up rebuilds
      - gertrude-api-build:/app/api/.build
    environment:
      - ENVIRONMENT=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    stdin_open: true
    tty: true
    command: bash

  postgres:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=jared
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=gertrude
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  gertrude-api-build:
  postgres-data:
